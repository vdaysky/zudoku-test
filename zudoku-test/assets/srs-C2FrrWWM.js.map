{"version":3,"file":"srs-C2FrrWWM.js","sources":["../../../pages/srs.mdx"],"sourcesContent":["# Software Requirements Specification (SRS)\n\n## 1. Introduction\n\n### 1.1 Purpose\nThe purpose of this document is to define the functional and non-functional requirements for the **Hardware Secret Manager** â€” a secure, microcontroller-based device for managing sensitive data (secrets), with strict access and transaction verification mechanisms.\n\n### 1.2 Scope\nThe Hardware Secret Manager provides secure storage for secrets (e.g., passwords, tokens, cryptographic keys) on a microcontroller. It encrypts stored data, communicates with a host device via USB, and enforces two-factor authentication (PIN + key card) for all access and operations.\n\n## 2. Overall Description\n\n### 2.1 Product Perspective\nThe system is a standalone hardware device that acts as a secure vault for secrets. It connects to a host device (PC, server, etc.) over USB and is recognized via a custom USB protocol.\n\n### 2.2 Product Functions\n- Securely store, retrieve, and delete secrets.\n- Authenticate user access via PIN and key card.\n- Encrypt all memory contents on-device.\n- Require key card for each sensitive transaction.\n- Communicate securely with host via USB.\n\n### 2.3 User Characteristics\nUsers are expected to have basic understanding of hardware devices and security practices. Admin-level users should understand secure initialization and management procedures.\n\n## 3. Functional Requirements\n\n### 3.1 Secure Secret Storage\n- Secrets are stored in the microcontroller's internal or connected memory.\n- All secrets must be encrypted using a secure, hardware-supported encryption algorithm (e.g., AES-256).\n\n### 3.2 Authentication and Unlocking\n- The device remains locked until a valid PIN and key card are presented.\n- Unlock state is maintained only in volatile memory (reset on power loss).\n\n### 3.3 Transaction Verification\n- Every sensitive operation (read/write/delete secret) must be confirmed with a key card.\n- The key card communicates with the device via a secure protocol (e.g., NFC, physical contact).\n\n### 3.4 USB Communication\n- The device communicates with the host through USB.\n- A custom or HID-like protocol will be used for command and data exchange.\n- All communication should be authenticated and optionally encrypted.\n\n## 4. Non-functional Requirements\n\n### 4.1 Security\n- Memory encryption is mandatory and must use hardware cryptographic support.\n- PIN and key card data must never be stored unencrypted.\n- Device must self-lock after a defined number of failed attempts.\n\n### 4.2 Performance\n- The device should unlock and respond to commands within 1 second.\n- Read/write operations should complete in under 500 ms for typical secret sizes (&lt;1 KB).\n\n### 4.3 Reliability\n- The device must ensure secrets are not corrupted under power loss.\n- Wear-leveling or similar techniques should be considered if flash memory is used.\n\n### 4.4 Usability\n- Feedback should be provided via LED indicators or host messages.\n- User errors (e.g., wrong PIN, missing key card) should return informative status codes.\n\n## 5. External Interfaces\n\n### 5.1 USB Interface\n- Connects to host devices via USB 2.0 or higher.\n- Uses a defined command set for operations (e.g., `LOCK`, `UNLOCK`, `READ_SECRET`, `WRITE_SECRET`, `DELETE_SECRET`).\n\n### 5.2 Key Card Interface\n- Supports external key card (e.g., via NFC or dedicated slot).\n- Verifies key card authenticity before allowing operations.\n"],"names":["_jsx","_components"],"mappings":"y9DAAE,SAAA;kCAEC,SAAA;8BAEC,SAAA;cACJ,SAAA,CAAA,oGAAAA,MAAAC,EAAA,OAAA,CAAmG,SAAA,yBAAyB,CAAA,EAAA,8IAAA;4BAExH,SAAA;aACJ,SAAA;yCAEG,SAAA;0CAEC,SAAA;aACJ,SAAA;wCAEI,SAAA;;cACF,SAAA;cACA,SAAA;cACA,SAAA;cACA,SAAA;cACA,SAAA;;2CAEE,SAAA;aACJ,SAAA;6CAEG,SAAA;4CAEC,SAAA;;cACF,SAAA;cACA,SAAA;;mDAEE,SAAA;;cACF,SAAA;cACA,SAAA;;+CAEE,SAAA;;cACF,SAAA;cACA,SAAA;;wCAEE,SAAA;;cACF,SAAA;cACA,SAAA;cACA,SAAA;;iDAEC,SAAA;+BAEC,SAAA;;cACF,SAAA;cACA,SAAA;cACA,SAAA;;kCAEE,SAAA;;cACF,SAAA;cACA,SAAA;;kCAEE,SAAA;;cACF,SAAA;cACA,SAAA;;gCAEE,SAAA;;cACF,SAAA;cACA,SAAA;;yCAEC,SAAA;oCAEC,SAAA;;cACF,SAAA;eACA,SAAA,CAAA,oDAAAD,MAAAC,EAAA,KAAA,WAAiD,SAAA,MAAM,CAAA,EAAA,KAAAD,MAAAC,EAAA,KAAA,WAAE,SAAA,QAAQ,CAAA,EAAA,KAAAD,MAAAC,EAAA,KAAA,WAAE,SAAA,aAAa,CAAA,EAAA,KAAAD,MAAAC,EAAA,KAAA,WAAE,SAAA,cAAc,CAAA,EAAA,KAAAD,MAAAC,EAAA,KAAA,WAAE,SAAA,eAAe,CAAA,EAAA,IAAA;;yCAE/G,SAAA;;cACF,SAAA;cACA,SAAA;"}